{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the FlowIDQ system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string",
          "description": "User's phone number."
        },
        "encryptedProfileId": {
          "type": "string",
          "description": "Unique encrypted profile ID for the user."
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document stored in the system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the document."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Document)"
        },
        "name": {
          "type": "string",
          "description": "Name of the document."
        },
        "fileUrl": {
          "type": "string",
          "description": "URL of the stored document file."
        },
        "documentType": {
          "type": "string",
          "description": "Type of the document (e.g., CNIC, certificate)."
        },
        "uploadDate": {
          "type": "string",
          "description": "Date and time when the document was uploaded.",
          "format": "date-time"
        },
        "folder": {
          "type": "string",
          "description": "Folder the document is stored in (e.g., Personal, Education)."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "fileUrl",
        "documentType",
        "uploadDate"
      ]
    },
    "Organization": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Organization",
      "type": "object",
      "description": "Represents an organization using the queue management system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the organization."
        },
        "name": {
          "type": "string",
          "description": "Name of the organization."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "QueueToken": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueueToken",
      "type": "object",
      "description": "Represents a queue token generated by an organization.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the queue token."
        },
        "organizationId": {
          "type": "string",
          "description": "Reference to Organization. (Relationship: Organization 1:N QueueToken)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N QueueToken)"
        },
        "tokenNumber": {
          "type": "number",
          "description": "The token number in the queue."
        },
        "creationTime": {
          "type": "string",
          "description": "Date and time when the token was created.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Current status of the token (e.g., waiting, served, cancelled)."
        }
      },
      "required": [
        "id",
        "organizationId",
        "userId",
        "tokenNumber",
        "creationTime",
        "status"
      ]
    },
    "DataSharingLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DataSharingLog",
      "type": "object",
      "description": "Represents a log entry for data sharing activities.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the log entry."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N DataSharingLog)"
        },
        "organizationId": {
          "type": "string",
          "description": "Reference to Organization. (Relationship: Organization 1:N DataSharingLog)"
        },
        "documentId": {
          "type": "string",
          "description": "Reference to Document. (Relationship: Document 1:N DataSharingLog)"
        },
        "sharedFields": {
          "type": "array",
          "description": "Fields that were shared during the data sharing event.",
          "items": {
            "type": "string"
          }
        },
        "sharingTime": {
          "type": "string",
          "description": "Date and time when the data was shared.",
          "format": "date-time"
        },
        "accessType": {
          "type": "string",
          "description": "Access type granted (e.g., full, partial, denied)."
        }
      },
      "required": [
        "id",
        "userId",
        "organizationId",
        "documentId",
        "sharingTime",
        "accessType"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Path-based ownership ensures only the user (or admin) can access their profile data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/documents/{documentId}",
        "definition": {
          "entityName": "Document",
          "schema": {
            "$ref": "#/backend/entities/Document"
          },
          "description": "Stores documents uploaded by the user. Path-based ownership ensures only the user (or admin) can access their documents.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "documentId",
              "description": "The unique identifier for the document."
            }
          ]
        }
      },
      {
        "path": "/organizations/{organizationId}",
        "definition": {
          "entityName": "Organization",
          "schema": {
            "$ref": "#/backend/entities/Organization"
          },
          "description": "Stores organization profiles.",
          "params": [
            {
              "name": "organizationId",
              "description": "The unique identifier for the organization."
            }
          ]
        }
      },
      {
        "path": "/organizations/{organizationId}/queueTokens/{queueTokenId}",
        "definition": {
          "entityName": "QueueToken",
          "schema": {
            "$ref": "#/backend/entities/QueueToken"
          },
          "description": "Stores queue tokens generated by an organization. Denormalized `organizationId` facilitates authorization independence.",
          "params": [
            {
              "name": "organizationId",
              "description": "The unique identifier for the organization."
            },
            {
              "name": "queueTokenId",
              "description": "The unique identifier for the queue token."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/dataSharingLogs/{logId}",
        "definition": {
          "entityName": "DataSharingLog",
          "schema": {
            "$ref": "#/backend/entities/DataSharingLog"
          },
          "description": "Stores data sharing logs for a user.  Path-based ownership for user-specific logs.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "logId",
              "description": "The unique identifier for the data sharing log entry."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure security, scalability, and ease of debugging, adhering to the principles of Authorization Independence, Clarity of Intent, DBAC, and QAPs.  User data is stored under `/users/{userId}`. Documents are stored within user-specific subcollections (`/users/{userId}/documents/{documentId}`), ensuring path-based ownership. This simplifies security rules because access control can be directly tied to the user's ID. Denormalization is used to copy relevant authorization data to subcollections, avoiding costly `get()` operations in security rules. Queue tokens are stored in a collection `/organizations/{organizationId}/queueTokens/{queueTokenId}`, enabling organizations to manage tokens and users to efficiently join queues. Sharing logs are stored under `/users/{userId}/dataSharingLogs/{logId}` to track data sharing activities.\n\nThis structure achieves Authorization Independence by directly embedding the `userId` within the document path and, where necessary, denormalizing membership/ownership data into subcollections. This eliminates the need for `get()` calls in security rules. QAPs are supported through structural segregation (e.g., separating user documents into individual collections) and the path-based ownership model."
  }
}