{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the SecurePass application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "createdAt"
      ]
    },
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a digital document stored in the user's wallet.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Document entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Document)"
        },
        "name": {
          "type": "string",
          "description": "Name of the document."
        },
        "fileUrl": {
          "type": "string",
          "description": "URL of the stored document file.",
          "format": "uri"
        },
        "uploadDate": {
          "type": "string",
          "description": "Timestamp indicating when the document was uploaded.",
          "format": "date-time"
        },
        "category": {
          "type": "string",
          "description": "Category of the document (e.g., ID, Passport, etc.)."
        },
        "isEncrypted": {
          "type": "boolean",
          "description": "Indicates whether the document is encrypted."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "fileUrl",
        "uploadDate",
        "category",
        "isEncrypted"
      ]
    },
    "QrCode": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QrCode",
      "type": "object",
      "description": "Represents a QR code generated for sharing a document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the QR Code entity."
        },
        "documentId": {
          "type": "string",
          "description": "Reference to Document. (Relationship: Document 1:1 QrCode)"
        },
        "generatedDate": {
          "type": "string",
          "description": "Timestamp indicating when the QR code was generated.",
          "format": "date-time"
        },
        "expirationDate": {
          "type": "string",
          "description": "Timestamp indicating when the QR code expires.",
          "format": "date-time"
        },
        "accessCount": {
          "type": "number",
          "description": "Number of times the QR code has been accessed."
        },
        "otp": {
          "type": "string",
          "description": "One-Time Password (OTP) associated with the QR code (if any)."
        },
        "passwordProtected": {
          "type": "boolean",
          "description": "Indicates whether the QR code access is password-protected."
        }
      },
      "required": [
        "id",
        "documentId",
        "generatedDate",
        "expirationDate",
        "accessCount",
        "passwordProtected"
      ]
    },
    "Queue": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Queue",
      "type": "object",
      "description": "Represents a queue in the smart queue system.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Queue entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the queue (e.g. 'DMV - Main Counter')."
        },
        "description": {
          "type": "string",
          "description": "A short description of the queue's purpose."
        },
        "locationName": {
          "type": "string",
          "description": "Name of the location where the queue is active (e.g., Hospital A, Bank Branch B)."
        },
        "currentNumber": {
          "type": "number",
          "description": "The current ticket number being served."
        },
        "averageWaitTime": {
          "type": "number",
          "description": "Estimated average wait time in minutes."
        },
        "totalInQueue": {
          "type": "number",
          "description": "The total number of people currently in the queue."
        },
        "lastTicketNumber": {
           "type": "number",
           "description": "The last ticket number that was issued."
        }
      },
      "required": [
        "id",
        "name",
        "locationName",
        "currentNumber",
        "averageWaitTime",
        "totalInQueue",
        "lastTicketNumber"
      ]
    },
    "QueueEntry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueueEntry",
      "type": "object",
      "description": "Represents a user's ticket in a specific queue.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the QueueEntry entity."
        },
        "queueId": {
          "type": "string",
          "description": "Reference to the Queue this entry belongs to."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who this ticket belongs to."
        },
        "userName": {
          "type": "string",
          "description": "The name of the user (denormalized for admin view)."
        },
        "ticketNumber": {
          "type": "number",
          "description": "The user's ticket number for this queue."
        },
        "entryTime": {
          "type": "string",
          "description": "Timestamp indicating when the user joined the queue.",
          "format": "date-time"
        },
        "estimatedServeTime": {
          "type": "string",
          "description": "The estimated time the user will be served.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the queue entry (e.g., 'waiting', 'serving', 'served', 'cancelled').",
          "enum": ["waiting", "serving", "served", "cancelled"]
        }
      },
      "required": [
        "id",
        "queueId",
        "userId",
        "userName",
        "ticketNumber",
        "entryTime",
        "status"
      ]
    },
    "AccessLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AccessLog",
      "type": "object",
      "description": "Represents an access log entry for a document.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the AccessLog entity."
        },
        "documentId": {
          "type": "string",
          "description": "Reference to Document. (Relationship: Document 1:N AccessLog)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N AccessLog)"
        },
        "accessTime": {
          "type": "string",
          "description": "Timestamp indicating when the document was accessed.",
          "format": "date-time"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address from which the document was accessed."
        },
        "location": {
          "type": "string",
          "description": "Location from which the document was accessed (e.g., city, country)."
        },
        "accessType": {
          "type": "string",
          "description": "Type of access (e.g., QR code scan, direct access)."
        }
      },
      "required": [
        "id",
        "documentId",
        "userId",
        "accessTime",
        "ipAddress"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/User" },
      "description": "Stores user profiles."
    },
    "/users/{userId}/documents/{documentId}": {
      "schema": { "$ref": "#/entities/Document" },
      "description": "Stores documents owned by a specific user."
    },
    "/users/{userId}/documents/{documentId}/accessLogs/{accessLogId}": {
      "schema": { "$ref": "#/entities/AccessLog" },
      "description": "Stores access logs for a specific document."
    },
    "/queues/{queueId}": {
      "schema": { "$ref": "#/entities/Queue" },
      "description": "Stores information about each available queue."
    },
    "/queues/{queueId}/queueEntries/{queueEntryId}": {
      "schema": { "$ref": "#/entities/QueueEntry" },
      "description": "Stores the tickets for each user in a specific queue."
    }
  }
}
